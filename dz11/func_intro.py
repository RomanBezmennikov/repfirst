# Объявление функций


# Для объявления функции необходимо прописать ключевое слово "def" через пробел указывается имя функции
# Сразу же после имени ставятся круглые скобки, в них будут указываться параметры
# После скобок ставится двоеточие и с новой строки с соблюдением табуляции прописывается тело функции
def say_hello():
    # Тело функции - все что выполнится при вызове функции
    print("Hello")


# Производим запуск ранее объявленной функции
say_hello()
# Не вызывая функции мы получаем обычный объект
print(say_hello)
# Ссылку на который мы можем передать в другую переменную
another = say_hello
# Это будет та же функция
print(another)
# Ее так же можно будет вызвать
another()
# Со встроенными функциями все тоже самое
another_2 = print
another_2("слово")
# Теперь удалив старую переменную с функцией, мы можем обратиться к функции через другую переменную
del say_hello
another()

# Дословное объявление
# def имя_функции(здесь будут параметры которые принимает функция):
#     тело функции
#     весь код будет выполнен только с одинаковой табуляцией

text = "Привет"
# Объявляем функцию с параметром
# Парамет в функции нечто вроде переменной, которая на момент объявления функции не знает своего значения
# Если передать меньше или больше аргументов чем присутствует параметров, то получим ошибку
def say_name(name):
    text = f'First name: {name}'
    print(text)

# Сколько определили параметров столько значений и передали
say_name("John")
say_name(None)


# Функция с двумя фактическими параметрами(обязательными аргументами)
def say_user(fst_name, lst_name):
    text = f'{fst_name} {lst_name} is user'
    print(text)


say_name("Alex")
# Позиционные аргументы подставляются в соответствии с последовательностью параметров, в первый параметр
# поместится первый аргумент
say_user("Kenny", "Mac")


def say_about_user(username, age=20, date_regi="--.--.----"):
    text = f"""{'*'*15}
Username: {username}
Age user: {age}
Register date: {date_regi}
{'*'*15}"""
    print(text)


say_about_user("Ted", 36, "12.11.2015")
say_about_user("Dan", 18)
say_about_user("Stan")

say_about_user("Jake", date_regi='10.03.1991')
say_about_user(date_regi='23.05.1999', username="Kyle")



# Объявленная внутри функции переменная не изменяет внешнюю, она создает переменую в локальной области видимости и
# впоследствии работает именно с ней, если же переменной с таким названием в функции нет, то интерпретатор ищет
# переменную вне функции
def text_demo():
    text = 123
    print(text)


# text_demo()
# print(text)