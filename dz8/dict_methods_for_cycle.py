# Методы словаря которые используются по большей части в циклах

dict1 = {123: 'str', False: 404, (1, 2, 3): 'tuple', 12: 404}

# По умолчанию цикл for перебирает ключи от словаря
for i in dict1:
    print(i)
# Метод keys возвращает список из ключей словаря, аргументов никаких не принимает
print(dict1.keys())
# Пример изменения значений по ключам в словаре при помощи цикла
# count = 1
# for i in dict1:
#     dict1[i] = count
#     count += 1
# Перебираем отдельно значения
for i in dict1.values():
    print(i)
# Метод values не принимает аргументов и возвращает список значений словаря
print(dict1.values())

for i in dict1.items():
    print(i)

for key, value in dict1.items():
    print(f'{key}: {value}')

# Метод items не принимает аргументов и возвращает пары ключ-значения в качестве кортежей в списке
# (список из кортежей(ключ, значение))
print(dict1.items())
# В данном цикле проверяем все ключи и значения
# for key, value in dict1.items():
# Если значения равны 404
#     if value == 404:
# Обращаемся по соответствующему ключу и меняем значение на 304
#         dict1[key] = 304

# В данном примере вводим доп переменную для того чтобы заменять всего одно значение 404 (первое которое будет найдено)
count = 0
for key, value in dict1.items():
    # Проверяем равно ли значение на данной итерации 404 и не была ли уже произведена хоть одна замена
    if value == 404 and count < 1:
        # Если условия верны меняем значение на 304
        dict1[key] = 304
        # И указываем в переменной счетчике что мы произвели замену
        count += 1

print(dict1)
dict2 = {}
#
for kort in dict1.items():
    if type(kort[1]) == int:
        dict2.update([kort])

print(dict2)