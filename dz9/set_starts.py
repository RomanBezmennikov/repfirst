# Тип коллекции - множество (изменяемый, неупорядоченный, может содержать только уникальные значения)

# Объявление множеств
# Способ №1
# Создаем множество при помощи фигурных скобок в скобках указываем элементы множества через запятую
# Тогда это бует множеством но не словарем
set_1 = {1, 2, 3, 4, 2, 3, "4"}
print(set_1)
print(type(set_1))
# Способ №2
li = [1, 2, 3, 4, 2, 3, "4"]
# Создаем множество при помощи функции set(итерируемое значение) в скобках передается набор элементов
# (какая либо коллекция)
set_2 = set(li)
print(set_2)
# Можно создать множество из диапазона значений
print(set(range(5)))
# Таким образом функция не отрабатывает и не задает нам множество из значений
print({range(5)})
# Обратиться к какому либо элементу по индексу не получится, так как значения никак не упорядочены(не имеют ни индексов
# ни ключей)
# print(set_1[1])

# Создание пустого множества
set_empty = {} # При помощи фигурных скобок создать пустое множество не получится
print(set_empty)
print(type(set_empty))

set_empty1 = set()
print(set_empty1)
print(type(set_empty1))

# Один из примеров работы множества
# Убрать из кортежа все одинаковые элементы
tu = (1, 2, 4, 6, 4, 12, 24, 56, 6, 12)
print(tu)
# Сперва приводим кортеж к типу данных множество(множество при своем объявлении удалит все повторяющиеся значения)
# Далее возвращаем значения из множества обратно к типу данных кортеж
tu = tuple(set(tu))
print(tu)

# Значениями множеств могут быть только неизменяемые типы данных
# Списки, множества, словари не могу быть вложены в множества
set_new = {1, 'text', (1, 2, 3), False}
print(set_new)
# Так же как итерируемый объект можно передать строку(получим множество только уникальных букв)
print(set('text'))
