# Декораторы для функций которые принимают аргументы

def decor_two(func):
    # Для того чтобы сделать декоратор универсальным для любых функций, необходимо прописать в обертке
    # Что будет приниматься неопределенное количество позиционных и ключевых аргументов
    def wrapper(*args, **kwargs):
        # print(*args, *kwargs)
        print(f"Принята функция {func}. Осуществляем запуск функции...")
        # После того как приняли все аргументы, мы все эти эргументы распаковываем в вызываемой оригинальной функции
        # Происходит сквозная передача аргументов
        func(*args, **kwargs)
    return wrapper


@decor_two
def print_text(name):
    print(f'Полученно имя пользователя: {name}')


# print(print_text.__name__)
# После установки неопределенного количества аргументов в обертке, можно оборачивать в декоратор любые функции
print_text("Эллен")


@decor_two
def print_date():
    print('Дата: 29.12.2022')


print_date()


@decor_two
def print_pass(password='admin'):
    print(f'Пароль: {password}')

print_pass(password="123")
