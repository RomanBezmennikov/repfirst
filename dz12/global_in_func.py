# Работа с глобальной областью видимости внутри функций

user = "Tod"
admin = "Kate"

def some():
    # Для того чтобы работать с глобальной переменной которая определена в глобальной области видимости
    # Необходимо прописать ключевое слово global и через пробел указать название этой переменной
    global user
    user = "John"
    print(user)


def some_2():
    # Можно создать глобльную переменную исключительно вызовом функции
    global run
    run = 123


def foo():
    global user, admin
    admin += 'lin'
    user = "Qwerty"

# Илюстрация первой функции
print(user)
some()
print(user)
# Илюстрация второй функции
some_2()
print(run)

# Илюстрация последней функции
print(admin, user)
foo()
print(admin, user)

# Пример использования - подсчет количества запусков функции
# Объявляем переменную которая будет являться неким счетчиком
# (будут записываться количество проведенных запусков функции find)
counter = 0

def find():
    # Объявляем что переменнаяя глобальная
    global counter
    # Теперь можем менять значение внешней переменной
    counter += 1
    print(f"Функция была запущенна {counter} раз")


find()
find()
find()

# Обращение к global из функции в функции
numb = 1


def enclose():
    def func_in():
        # Когда необходимо в рамках какой либо функции изменить глобальную переменную
        # Вне зависимости от вложенности указывается ссылка на глобальную область именно в той функции
        # Которая и будет менять ее значение
        global numb
        numb += 1
    func_in()


enclose()
enclose()
enclose()
print(numb)
