# Замыкания можно использовать как способ создать счетчик
# Создадим функцию которая в качестве параметра принимает начальное значение счетчика
def counter(count):
    def increment():
        # Для изменения переменной из enclosing необходимо использовать nonlocal
        nonlocal count
        res = count
        count += 1
        # Результатом функции не обязательно должна быть та самая переменная которая была взята из объемлющей функции
        # Главное чтобы переменная использовалась внутри функции
        # Иначе ссылка на эту переменную будет удалена
        return res
    return increment

# Если вызвать функции таким образом то счетчик не будет работать корректно, это связанно с тем
# Что ссылка на вложенную функцию нигде не сохраняется и потому удаляется после отрабатывания функции
print(counter(0)())
print(counter(0)())
print(counter(0)())
# При создании ссылки на функцию помещаем ее в глобальную переменную, которую теперь импользуем несколько раз
count_1 = counter(0)
print(count_1())
print(count_1())
print(count_1())
# Реализуется не связанные между собой(независимые) области видимости и как следствие их можно использовать
# так же независимо
count_2 = counter(6)
count_3 = counter(100)
print(count_1())
print(count_2())
print(count_3())
print("-"*10)
print(count_3())
print(count_2())
print(count_1())
print(count_3())
print(count_3())
print(count_3())
print(count_3())
print(count_2())


