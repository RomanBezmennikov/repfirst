# Функция filter
# Осуществляет отбор элементов в соответствии с определенным критерием, который задается функцией
li = [1, 4, 5, 7, 96, 43, 346, 84, 23, 65, 74, 3234]


# Именная функция которая осуществляет проверку, четное число или нет
def is_even(num):
    if num % 2 == 0:
        # Для того чтобы корректно работать с функцией filter, необходимо возвращать всего два вида значений
        # True или False
        return True
    else:
        return False


# Функция записывается подобно map и в качестве параметров так же принимает сперва ссылку на функцию, а потом
# итерируемый объект, но в отличии от map объект всего один, нельзя передать два итерируемых объекта
fil = filter(is_even, li)
print(filter(is_even, li))
print(list(fil))
# print(next(fil))
# print(next(fil))
# print(next(fil))
# print(next(fil))
# Так же запишем полностью эквивалентную реализацию только при помощи лямбда функции
fil1 = filter(lambda num: num % 2 == 0, li)
print(list(fil1))

# Из строки небходимо получить цифры
string = 'Мне 12 лет живу на 1ой советской дом 13'

# Для того чтобы получить цифры проверяем каждый символ и ищес среди них те на которые метод isdigit выдаст True
filter_string = filter(lambda symbol: symbol.isdigit(), string)
# Такие элементы и поместяться в финальный список
print(list(filter_string))
# Полный аналог записи выше, за исключением того что мы не использовали лямбду
filter_string2 = filter(str.isdigit, string)
# print(string.isdigit())
# Дополнительно Используем map на уже подготовленном итерируемом объекте(отфильтрованном значении)
# И приводим эти значения к int
filter_string2 = map(int, filter_string2)
print(list(filter_string2))
# Та же запись в одну строку и результат приведем к типу кортеж
print(tuple(map(int, filter(str.isdigit, string))))

# Такая же работа с множествами
set_1 = {1, 5, -2, -15, 4, 78, -4}
print(set(filter(lambda x: x >= 0, set_1)))


# Из строки небходимо отфильтровать все цифры
string = 'Мне 12 лет живу@ на 1ой советской дом 13'
# Будем сравнивать перибираемые элементы с элементами из данного списка
li_warning = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '@']
# Если выбираемый элемент находится в списке выше то мы отфильтровываем его
print(''.join(filter(lambda x: x not in li_warning, string)))
